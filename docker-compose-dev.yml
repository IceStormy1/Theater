version: '3.4'

networks:
  theater-dev:
    driver: bridge

services:
  theater:
    container_name: 'theater'
    image: ${DOCKER_REGISTRY-}theater
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - theater-dev
    env_file:
      - .env-dev
    depends_on:
      - minio
      - postgres

  postgres:
    container_name: 'postgres'
    image: postgres:latest
    env_file:
      - .env-dev
    command: -p 5434
    restart: always
    expose:
      - "5434"
    ports:
      - '5434:5434'
    networks:
      - theater-dev
    volumes: 
      - postgres:/var/lib/postgresql/data

  # rabbitmq:
  #   image: rabbitmq:3.9.7-management
  #   container_name: 'rabbitmq'
  #   hostname: myrabbitmq
  #   restart: unless-stopped
  #   ports:
  #     - 5672:5672 # AMQP protocol port
  #     - 15672:15672 # UI for images ...:3-management
  #   healthcheck:
  #     test: rabbitmq-diagnostics -q ping
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #     #start_period: 0s
  #   #volumes:
  #   #    - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
  #   #    - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
  #   env_file:
  #     - .env-dev
  minio:
    image: minio/minio:latest
    env_file:
      - .env-dev
    command: server --console-address ":9001" /data
    volumes:
      - ./minio:/data
    ports:
      - "9000:9000"
      - "9001:9001"

volumes:
  postgres:
    driver: local
